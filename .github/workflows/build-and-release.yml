name: Build and Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

jobs:
  build:
    name: Build & Release
    # runs-on: macos-latest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Replace version number in flutter/pubspec.yaml
        run: |
          tag=${{ github.ref_name }}
          version=$(echo $tag | sed 's/^v//')
          echo "VERSION=$version" >> $GITHUB_ENV

      
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "oracle"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      # - name: Generate Classes
      #   run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Run tests
        run: |
            flutter analyze
#            flutter test

      - name: Decode Keystore
        run: |
            echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        run: |
            echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
            echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
            echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
            echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build APK
        run: flutter build apk --release --flavor staging --build-name ${{ env.VERSION }} --build-number ${{ github.run_number }}

    #   - name: Build appBundle
    #     run: flutter build appbundle --build-name ${{ env.VERSION }} --build-number ${{ github.run_number }}

    #   - name: Build iOS
    #     run: flutter build ipa --no-codesign --build-name ${{ env.VERSION }} --build-number ${{ github.run_number }}

    #   - name: Compress Archives and IPAs
    #     run: |
    #         cd build
    #         tar -czf ios_build.tar.gz ios

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
            name: Releases
            path: |
                build/app/outputs/flutter-apk/app-release.apk
#                build/app/outputs/bundle/release/app-release.aab
#                build/ios_build.tar.g

      # - name: Upload Artifact to Android Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #       appId: ${{secrets.FIREBASE_ANDROID_APP_ID}}
      #       serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
      #       groups: testers
      #       file: build/app/outputs/flutter-apk/app-release.apk

      # - name: Upload Artifact to iOS Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #       appId: ${{secrets.FIREBASE_IOS_APP_ID}}
      #       serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
      #       groups: testers
      #       file: build/app/outputs/flutter-apk/app-release.apk